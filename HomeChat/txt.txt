Column(
        children: [
          Padding(
            padding: const EdgeInsets.only(left: 8.0),
            child: Align(
              alignment: Alignment.topLeft,
              child: Container(
                width: 70,
                height: 30,
                margin: const EdgeInsets.only(top: 40),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(8),
                ),
                child: const Text(
                  'Amigos',
                  style: TextStyle(fontSize: 20, color: Colors.blue),
                ),
              ),
            ),
          ),
          Align(
            alignment: Alignment.topCenter,
            child: getFriend.whenOrNull(
              data: (FriendState data) {
                return CustomScrollView(
                  slivers: [
                    SliverList.builder(
                      itemCount: data.friend.length,
                      itemBuilder: (context, index) {
                        return Container(
                          width: context.screenWidth,
                          height: 50,
                          alignment: Alignment.centerLeft,
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(8),
                            border: const Border(
                              bottom: BorderSide(color: Colors.blue, width: 1),
                            ),
                          ),
                          child: Padding(
                            padding: const EdgeInsets.only(left: 5.0),
                            child: Dismissible(
                              direction: DismissDirection.horizontal,
                              key: ValueKey(data.friend[index].id),
                              onDismissed: (direction) {
                                if (direction == DismissDirection.startToEnd) {
                                  final aceptRequest =
                                      ref.watch(requestVmProvider.notifier);
                                  aceptRequest
                                      .aceptRequest(data.friend[index].id);
                                } else if (direction ==
                                    DismissDirection.endToStart) {
                                  final aceptRequest =
                                      ref.watch(requestVmProvider.notifier);
                                  aceptRequest
                                      .deletRequest(data.friend[index].id);
                                  Messages.showInfo(
                                      'Solicitação aceitada', context);
                                }
                              },
                              background: Container(
                                color: Colors.blue,
                                alignment: Alignment.centerLeft,
                                child: const Text(
                                  'Aceitar',
                                  style: TextStyle(color: Colors.black),
                                ),
                              ),
                              secondaryBackground: Container(
                                color: Colors.red,
                                alignment: Alignment.centerRight,
                                child: const Text(
                                  'Cancelar',
                                  style: TextStyle(color: Colors.black),
                                ),
                              ),
                              child: Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                children: [
                                  const CircleAvatar(
                                    radius: 20,
                                    backgroundColor: Colors.white24,
                                    child: Image(
                                      image: AssetImage(ImageConstants.user),
                                      fit: BoxFit.cover,
                                    ),
                                  ),
                                  const SizedBox(width: 14),
                                  Expanded(
                                      child: Text(
                                    data.friend[index].name,
                                    overflow: TextOverflow.ellipsis,
                                  )),
                                ],
                              ),
                            ),
                          ),
                        );
                      },
                    ),
                  ],
                );
              },
              error: (error, stackTrace) => Container(),
            ),
          ),
          const SizedBox(
            height: 24,
          ),
          Divider(
            color: Colors.indigo[300],
          ),
          Padding(
            padding: const EdgeInsets.only(left: 8.0),
            child: Align(
              alignment: Alignment.topLeft,
              child: Container(
                width: context.screenWidth,
                height: 30,
                margin: const EdgeInsets.only(top: 5),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(8),
                ),
                child: const Text(
                  'Solicitações',
                  style: TextStyle(fontSize: 20, color: Colors.blue),
                ),
              ),
            ),
          ),
          Container(
            width: context.screenMetWidth(1),
            height: context.screenMetHeight(0.4),
            alignment: Alignment.topCenter,
            decoration: BoxDecoration(
              borderRadius: BorderRadius.circular(8),
            ),
            child: Align(
              alignment: Alignment.topCenter,
              child: getRequest.whenOrNull(
                  data: (RequestState data) {
                    return CustomScrollView(
                      slivers: [
                        SliverList.builder(
                          itemCount: data.request.length,
                          itemBuilder: (context, index) {
                            return Container(
                              width: context.screenWidth,
                              height: 50,
                              alignment: Alignment.centerLeft,
                              decoration: BoxDecoration(
                                borderRadius: BorderRadius.circular(8),
                                border: const Border(
                                  bottom:
                                      BorderSide(color: Colors.blue, width: 1),
                                ),
                              ),
                              child: Padding(
                                padding: const EdgeInsets.only(left: 5.0),
                                child: Dismissible(
                                  direction: DismissDirection.horizontal,
                                  key: ValueKey(data.request[index].id),
                                  onDismissed: (direction) {
                                    if (direction ==
                                        DismissDirection.startToEnd) {
                                      final aceptRequest =
                                          ref.watch(requestVmProvider.notifier);
                                      aceptRequest
                                          .aceptRequest(data.request[index].id);
                                    } else if (direction ==
                                        DismissDirection.endToStart) {
                                      final aceptRequest =
                                          ref.watch(requestVmProvider.notifier);
                                      aceptRequest
                                          .deletRequest(data.request[index].id);
                                      Messages.showInfo(
                                          'Solicitação aceitada', context);
                                    }
                                  },
                                  background: Container(
                                    color: Colors.blue,
                                    alignment: Alignment.centerLeft,
                                    child: const Text(
                                      'Aceitar',
                                      style: TextStyle(color: Colors.black),
                                    ),
                                  ),
                                  secondaryBackground: Container(
                                    color: Colors.red,
                                    alignment: Alignment.centerRight,
                                    child: const Text(
                                      'Cancelar',
                                      style: TextStyle(color: Colors.black),
                                    ),
                                  ),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.start,
                                    children: [
                                      const CircleAvatar(
                                        radius: 20,
                                        backgroundColor: Colors.white24,
                                        child: Image(
                                          image:
                                              AssetImage(ImageConstants.user),
                                          fit: BoxFit.cover,
                                        ),
                                      ),
                                      const SizedBox(width: 14),
                                      Expanded(
                                          child: Text(
                                        data.request[index].name,
                                        overflow: TextOverflow.ellipsis,
                                      )),
                                    ],
                                  ),
                                ),
                              ),
                            );
                          },
                        ),
                      ],
                    );
                  },
                  error: (error, stackTrace) => Container()),
            ),
          ),
        ],
      ),